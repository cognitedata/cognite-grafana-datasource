// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 1`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 2`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetSubtreeIds": Array [
        Object {
          "id": "456",
        },
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 3`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "789",
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 4`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 5`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetSubtreeIds": Array [
        Object {
          "id": "000",
        },
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 6`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 7`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 8`] = `
Object {
  "data": Object {
    "end": 1549338475000,
    "items": Array [
      Object {
        "id": 123,
      },
    ],
    "limit": 100000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_8_A",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 9`] = `
Object {
  "data": Object {
    "aggregates": Array [
      "min",
    ],
    "end": 1549338475000,
    "granularity": "20m",
    "items": Array [
      Object {
        "id": 123,
      },
      Object {
        "id": 456,
      },
    ],
    "limit": 5000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_8_B",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 10`] = `
Object {
  "data": Object {
    "aggregates": Array [
      "max",
    ],
    "end": 1549338475000,
    "granularity": "6m",
    "items": Array [
      Object {
        "id": 123,
      },
      Object {
        "id": 456,
      },
      Object {
        "id": 789,
      },
    ],
    "limit": 3333,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_8_C",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 11`] = `
Object {
  "data": Object {
    "aggregates": Array [
      "tv",
    ],
    "end": 1549338475000,
    "granularity": "6m",
    "items": Array [
      Object {
        "id": 123,
      },
    ],
    "limit": 10000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_8_D",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`Datasource Query Given "Select Timeseries from Asset" queries should return correct datapoints and labels 1`] = `
Object {
  "data": Array [
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries123",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "min Timeseries123",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "min Timeseries456",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesA-Timeseries123",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesB-Timeseries456",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesC-Timeseries789",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseries",
    },
  ],
}
`;

exports[`Datasource Query Given "Select Timeseries" queries should generate the correct queries 1`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "id": 789,
      },
    ],
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/byids",
}
`;

exports[`Datasource Query Given "Select Timeseries" queries should generate the correct queries 2`] = `
Object {
  "data": Object {
    "end": 1549338475000,
    "items": Array [
      Object {
        "id": 123,
      },
    ],
    "limit": 100000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_3_A",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`Datasource Query Given "Select Timeseries" queries should generate the correct queries 3`] = `
Object {
  "data": Object {
    "aggregates": Array [
      "count",
    ],
    "end": 1549338475000,
    "granularity": "20m",
    "items": Array [
      Object {
        "id": 456,
      },
    ],
    "limit": 10000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_3_B",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`Datasource Query Given "Select Timeseries" queries should generate the correct queries 4`] = `
Object {
  "data": Object {
    "aggregates": Array [
      "step",
    ],
    "end": 1549338475000,
    "granularity": "1s",
    "items": Array [
      Object {
        "id": 789,
      },
    ],
    "limit": 10000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_3_C",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`Datasource Query Given "Select Timeseries" queries with errors should generate the correct query 1`] = `
Object {
  "data": Object {
    "end": 1549338475000,
    "items": Array [
      Object {
        "id": 123,
      },
    ],
    "limit": 100000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_5_A",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`Datasource Query Given "Select Timeseries" queries with errors should generate the correct query 2`] = `
Object {
  "data": Object {
    "end": 1549338475000,
    "items": Array [
      Object {
        "id": 123,
      },
    ],
    "limit": 100000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_5_B",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 1`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 2`] = `
Object {
  "data": Object {
    "filter": Object {
      "metadata": Object {
        "key1": "value1",
      },
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 3`] = `
Object {
  "data": Object {
    "filter": Object {
      "metadata": Object {
        "key1": "value1",
      },
      "name": "Timeseries1",
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 4`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 5`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "id": 4,
      },
      Object {
        "id": 5,
      },
      Object {
        "id": 6,
      },
    ],
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/byids",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 6`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "id": 4,
      },
      Object {
        "id": 5,
      },
      Object {
        "id": 6,
      },
    ],
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/byids",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 7`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "externalId": "Timeseries1",
      },
    ],
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/byids",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 8`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "id": 2,
      },
      Object {
        "id": 3,
      },
      Object {
        "id": 4,
      },
      Object {
        "id": 5,
      },
      Object {
        "id": 6,
      },
    ],
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/byids",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 9`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "end": 1549338475000,
        "expression": "ts{id=4, aggregate=\\"discreteVariance\\", granularity=\\"10d\\"}",
        "limit": 3333,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=5, aggregate=\\"discreteVariance\\", granularity=\\"10d\\"}",
        "limit": 3333,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=6, aggregate=\\"discreteVariance\\", granularity=\\"10d\\"}",
        "limit": 3333,
        "start": 1549336675000,
      },
    ],
  },
  "method": "POST",
  "requestId": "1_12_B",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 10`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "end": 1549338475000,
        "expression": "ts{id=4, aggregate=\\"discreteVariance\\"}",
        "limit": 3333,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=5, aggregate=\\"discreteVariance\\"}",
        "limit": 3333,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=6, aggregate=\\"discreteVariance\\"}",
        "limit": 3333,
        "start": 1549336675000,
      },
    ],
  },
  "method": "POST",
  "requestId": "1_12_C",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 11`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "end": 1549338475000,
        "expression": "ts{externalId=\\"Timeseries1\\"}",
        "limit": 100000,
        "start": 1549336675000,
      },
    ],
  },
  "method": "POST",
  "requestId": "1_12_D",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 12`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "end": 1549338475000,
        "expression": "ts{id=2}",
        "limit": 20000,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=3}",
        "limit": 20000,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=4}",
        "limit": 20000,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=5}",
        "limit": 20000,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=6}",
        "limit": 20000,
        "start": 1549336675000,
      },
    ],
  },
  "method": "POST",
  "requestId": "1_12_E",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`Datasource Query Given custom queries should return correct datapoints and labels 1`] = `
Object {
  "data": Array [
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries4",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries5",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Test",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries4",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries5",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Test",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries1",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesB value1",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesC value1",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesD value1",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesE value2",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesF value1",
    },
  ],
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 1`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 2`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 3`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 4`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 5`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 6`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 7`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 8`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 9`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 10`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "externalId": "Timeseries1",
      },
    ],
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/byids",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 11`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "end": 1549338475000,
        "expression": "ts{externalId=\\"Timeseries1\\"}",
        "limit": 100000,
        "start": 1549336675000,
      },
    ],
  },
  "method": "POST",
  "requestId": "1_15_J",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`Datasource Query Given custom queries with functions should return correct datapoints and labels 1`] = `
Object {
  "data": Array [
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesA : Timeseries1",
    },
  ],
}
`;

exports[`Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should generate the correct queries and not requery for asset timeseries 1`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should generate the correct queries and not requery for asset timeseries 2`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetSubtreeIds": Array [
        Object {
          "id": "123",
        },
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should generate the correct queries and not requery for asset timeseries 3`] = `
Object {
  "data": Object {
    "end": 1549338475000,
    "items": Array [
      Object {
        "id": 123,
      },
    ],
    "limit": 100000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_18_A",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should generate the correct queries and not requery for asset timeseries 4`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetSubtreeIds": Array [
        Object {
          "id": "456",
        },
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should generate the correct queries and not requery for asset timeseries 5`] = `
Object {
  "data": Object {
    "end": 1549338475000,
    "items": Array [
      Object {
        "id": 123,
      },
      Object {
        "id": 456,
      },
    ],
    "limit": 50000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_18_A",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should return correct datapoints and labels 1`] = `
Object {
  "data": Array [],
}
`;

exports[`Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should return correct datapoints and labels 2`] = `
Object {
  "data": Array [],
}
`;

exports[`Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should return correct datapoints and labels 3`] = `
Object {
  "data": Array [
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries123",
    },
  ],
}
`;

exports[`Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should return correct datapoints and labels 4`] = `
Object {
  "data": Array [
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries123",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries456",
    },
  ],
}
`;
