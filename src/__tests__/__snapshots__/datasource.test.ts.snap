// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 1`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 2`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetSubtreeIds": Array [
        Object {
          "id": "456",
        },
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 3`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "789",
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 4`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 5`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetSubtreeIds": Array [
        Object {
          "id": "000",
        },
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 6`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 7`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 8`] = `
Object {
  "data": Object {
    "end": 1549338475000,
    "items": Array [
      Object {
        "id": 123,
      },
    ],
    "limit": 100000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_8_A",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 9`] = `
Object {
  "data": Object {
    "aggregates": Array [
      "min",
    ],
    "end": 1549338475000,
    "granularity": "20m",
    "items": Array [
      Object {
        "id": 123,
      },
      Object {
        "id": 456,
      },
    ],
    "limit": 5000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_8_B",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 10`] = `
Object {
  "data": Object {
    "aggregates": Array [
      "max",
    ],
    "end": 1549338475000,
    "granularity": "6m",
    "items": Array [
      Object {
        "id": 123,
      },
      Object {
        "id": 456,
      },
      Object {
        "id": 789,
      },
    ],
    "limit": 3333,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_8_C",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 11`] = `
Object {
  "data": Object {
    "aggregates": Array [
      "tv",
    ],
    "end": 1549338475000,
    "granularity": "6m",
    "items": Array [
      Object {
        "id": 123,
      },
    ],
    "limit": 10000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_8_D",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`Datasource Query Given "Select Timeseries from Asset" queries should return correct datapoints and labels 1`] = `
Object {
  "data": Array [
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries123",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "min Timeseries123",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "min Timeseries456",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesA-Timeseries123",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesB-Timeseries456",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesC-Timeseries789",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseries",
    },
  ],
}
`;

exports[`Datasource Query Given "Select Timeseries" queries should generate the correct queries 1`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "id": 789,
      },
    ],
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/byids",
}
`;

exports[`Datasource Query Given "Select Timeseries" queries should generate the correct queries 2`] = `
Object {
  "data": Object {
    "end": 1549338475000,
    "items": Array [
      Object {
        "id": 123,
      },
    ],
    "limit": 100000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_3_A",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`Datasource Query Given "Select Timeseries" queries should generate the correct queries 3`] = `
Object {
  "data": Object {
    "aggregates": Array [
      "count",
    ],
    "end": 1549338475000,
    "granularity": "20m",
    "items": Array [
      Object {
        "id": 456,
      },
    ],
    "limit": 10000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_3_B",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`Datasource Query Given "Select Timeseries" queries should generate the correct queries 4`] = `
Object {
  "data": Object {
    "aggregates": Array [
      "step",
    ],
    "end": 1549338475000,
    "granularity": "1s",
    "items": Array [
      Object {
        "id": 789,
      },
    ],
    "limit": 10000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_3_C",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`Datasource Query Given "Select Timeseries" queries with errors should generate the correct query 1`] = `
Object {
  "data": Object {
    "end": 1549338475000,
    "items": Array [
      Object {
        "id": 123,
      },
    ],
    "limit": 100000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_5_A",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`Datasource Query Given "Select Timeseries" queries with errors should generate the correct query 2`] = `
Object {
  "data": Object {
    "end": 1549338475000,
    "items": Array [
      Object {
        "id": 123,
      },
    ],
    "limit": 100000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_5_B",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 1`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 2`] = `
Object {
  "data": Object {
    "filter": Object {
      "metadata": Object {
        "key1": "value1",
      },
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 3`] = `
Object {
  "data": Object {
    "filter": Object {
      "metadata": Object {
        "key1": "value1",
      },
      "name": "Timeseries1",
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 4`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 5`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "id": 1,
      },
      Object {
        "id": 2,
      },
      Object {
        "id": 3,
      },
    ],
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/byids",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 6`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "id": 1,
      },
    ],
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/byids",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 7`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "id": 1,
      },
    ],
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/byids",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 8`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "externalId": "Timeseries1",
      },
    ],
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/byids",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 9`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "id": 2,
      },
      Object {
        "id": 3,
      },
    ],
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/byids",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 10`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "end": 1549338475000,
        "expression": "ts{id=1}",
        "limit": 33333,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=2}",
        "limit": 33333,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=3}",
        "limit": 33333,
        "start": 1549336675000,
      },
    ],
  },
  "method": "POST",
  "requestId": "1_12_A",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 11`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "end": 1549338475000,
        "expression": "ts{id=1, aggregate=\\"discreteVariance\\", granularity=\\"10d\\"}",
        "limit": 10000,
        "start": 1549336675000,
      },
    ],
  },
  "method": "POST",
  "requestId": "1_12_B",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 12`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "end": 1549338475000,
        "expression": "ts{id=1, aggregate=\\"discreteVariance\\"}",
        "limit": 10000,
        "start": 1549336675000,
      },
    ],
  },
  "method": "POST",
  "requestId": "1_12_C",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 13`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "end": 1549338475000,
        "expression": "ts{externalId=\\"Timeseries1\\"}",
        "limit": 100000,
        "start": 1549336675000,
      },
    ],
  },
  "method": "POST",
  "requestId": "1_12_D",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`Datasource Query Given custom queries should generate the correct filtered queries 14`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "end": 1549338475000,
        "expression": "ts{id=2}",
        "limit": 50000,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=3}",
        "limit": 50000,
        "start": 1549336675000,
      },
    ],
  },
  "method": "POST",
  "requestId": "1_12_E",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`Datasource Query Given custom queries should return correct datapoints and labels 1`] = `
Object {
  "data": Array [
    Object {
      "datapoints": Array [],
      "target": "Timeseries1",
    },
    Object {
      "datapoints": Array [],
      "target": "Timeseries2",
    },
    Object {
      "datapoints": Array [],
      "target": "Timeseries3",
    },
    Object {
      "datapoints": Array [],
      "target": "Timeseries1",
    },
    Object {
      "datapoints": Array [],
      "target": "Timeseries1",
    },
  ],
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 1`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 2`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 3`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 4`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 5`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 6`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 7`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 8`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 9`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 10`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 11`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 12`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 13`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 14`] = `
Object {
  "data": Object {
    "filter": Object {},
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 15`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "id": 1,
      },
      Object {
        "id": 2,
      },
      Object {
        "id": 3,
      },
    ],
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/byids",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 16`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "id": 1,
      },
      Object {
        "id": 2,
      },
      Object {
        "id": 3,
      },
    ],
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/byids",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 17`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "id": 1,
      },
      Object {
        "id": 2,
      },
      Object {
        "id": 3,
      },
    ],
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/byids",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 18`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "id": 1,
      },
      Object {
        "externalId": "Timeseries1",
      },
      Object {
        "id": 2,
      },
      Object {
        "id": 3,
      },
    ],
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/byids",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 19`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "id": 1,
      },
      Object {
        "id": 2,
      },
      Object {
        "id": 3,
      },
    ],
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/byids",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 20`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "id": 1,
      },
      Object {
        "id": 2,
      },
      Object {
        "id": 3,
      },
      Object {
        "externalId": "Timeseries1",
      },
    ],
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/byids",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 21`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "id": 1,
      },
      Object {
        "id": 2,
      },
      Object {
        "id": 3,
      },
    ],
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/byids",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 22`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "externalId": "Timeseries1",
      },
    ],
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/byids",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 23`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "end": 1549338475000,
        "expression": "ts{id=1} + pi()",
        "limit": 33333,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=2} + pi()",
        "limit": 33333,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=3} + pi()",
        "limit": 33333,
        "start": 1549336675000,
      },
    ],
  },
  "method": "POST",
  "requestId": "1_15_A",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 24`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "end": 1549338475000,
        "expression": "ts{id=1} + ts{id=1}",
        "limit": 33333,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=2} + ts{id=1}",
        "limit": 33333,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=3} + ts{id=1}",
        "limit": 33333,
        "start": 1549336675000,
      },
    ],
  },
  "method": "POST",
  "requestId": "1_15_B",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 25`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "end": 1549338475000,
        "expression": "ts{id=1} * ts{id=1, aggregate=\\"average\\"} - ts{id=1, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=1} * ts{id=1, aggregate=\\"average\\"} - ts{id=2, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=1} * ts{id=1, aggregate=\\"average\\"} - ts{id=3, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=1} * ts{id=2, aggregate=\\"average\\"} - ts{id=1, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=1} * ts{id=2, aggregate=\\"average\\"} - ts{id=2, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=1} * ts{id=2, aggregate=\\"average\\"} - ts{id=3, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=1} * ts{id=3, aggregate=\\"average\\"} - ts{id=1, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=1} * ts{id=3, aggregate=\\"average\\"} - ts{id=2, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=1} * ts{id=3, aggregate=\\"average\\"} - ts{id=3, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=2} * ts{id=1, aggregate=\\"average\\"} - ts{id=1, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=2} * ts{id=1, aggregate=\\"average\\"} - ts{id=2, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=2} * ts{id=1, aggregate=\\"average\\"} - ts{id=3, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=2} * ts{id=2, aggregate=\\"average\\"} - ts{id=1, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=2} * ts{id=2, aggregate=\\"average\\"} - ts{id=2, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=2} * ts{id=2, aggregate=\\"average\\"} - ts{id=3, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=2} * ts{id=3, aggregate=\\"average\\"} - ts{id=1, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=2} * ts{id=3, aggregate=\\"average\\"} - ts{id=2, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=2} * ts{id=3, aggregate=\\"average\\"} - ts{id=3, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=3} * ts{id=1, aggregate=\\"average\\"} - ts{id=1, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=3} * ts{id=1, aggregate=\\"average\\"} - ts{id=2, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=3} * ts{id=1, aggregate=\\"average\\"} - ts{id=3, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=3} * ts{id=2, aggregate=\\"average\\"} - ts{id=1, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=3} * ts{id=2, aggregate=\\"average\\"} - ts{id=2, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=3} * ts{id=2, aggregate=\\"average\\"} - ts{id=3, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=3} * ts{id=3, aggregate=\\"average\\"} - ts{id=1, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=3} * ts{id=3, aggregate=\\"average\\"} - ts{id=2, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=3} * ts{id=3, aggregate=\\"average\\"} - ts{id=3, aggregate=\\"average\\", granularity=\\"10s\\"}",
        "limit": 370,
        "start": 1549336675000,
      },
    ],
  },
  "method": "POST",
  "requestId": "1_15_C",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 26`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "end": 1549338475000,
        "expression": "ts{id=1} * ts{externalId=\\"Timeseries1\\", aggregate=\\"average\\"} - ts{externalId=\\"Timeseries1\\", aggregate=\\"average\\", granularity=\\"10m\\"}",
        "limit": 3333,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=2} * ts{externalId=\\"Timeseries1\\", aggregate=\\"average\\"} - ts{externalId=\\"Timeseries1\\", aggregate=\\"average\\", granularity=\\"10m\\"}",
        "limit": 3333,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "ts{id=3} * ts{externalId=\\"Timeseries1\\", aggregate=\\"average\\"} - ts{externalId=\\"Timeseries1\\", aggregate=\\"average\\", granularity=\\"10m\\"}",
        "limit": 3333,
        "start": 1549336675000,
      },
    ],
  },
  "method": "POST",
  "requestId": "1_15_D",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 27`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "end": 1549338475000,
        "expression": "(ts{id=1} + ts{id=2} + ts{id=3})",
        "limit": 100000,
        "start": 1549336675000,
      },
    ],
  },
  "method": "POST",
  "requestId": "1_15_G",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 28`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "end": 1549338475000,
        "expression": "(ts{id=1, aggregate=\\"average\\"} + ts{id=2, aggregate=\\"average\\"} + ts{id=3, aggregate=\\"average\\"}) + (ts{id=1, aggregate=\\"average\\", granularity=\\"1h\\"} + ts{id=2, aggregate=\\"average\\", granularity=\\"1h\\"} + ts{id=3, aggregate=\\"average\\", granularity=\\"1h\\"}) * max(ts{id=1, aggregate=\\"count\\"}, ts{id=2, aggregate=\\"count\\"}, ts{id=3, aggregate=\\"count\\"}) / min(ts{externalId=\\"Timeseries1\\"}) - avg(ts{id=1, aggregate=\\"average\\"}, ts{id=2, aggregate=\\"average\\"}, ts{id=3, aggregate=\\"average\\"}) - 3 * ts{id=1}",
        "limit": 3333,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "(ts{id=1, aggregate=\\"average\\"} + ts{id=2, aggregate=\\"average\\"} + ts{id=3, aggregate=\\"average\\"}) + (ts{id=1, aggregate=\\"average\\", granularity=\\"1h\\"} + ts{id=2, aggregate=\\"average\\", granularity=\\"1h\\"} + ts{id=3, aggregate=\\"average\\", granularity=\\"1h\\"}) * max(ts{id=1, aggregate=\\"count\\"}, ts{id=2, aggregate=\\"count\\"}, ts{id=3, aggregate=\\"count\\"}) / min(ts{externalId=\\"Timeseries1\\"}) - avg(ts{id=1, aggregate=\\"average\\"}, ts{id=2, aggregate=\\"average\\"}, ts{id=3, aggregate=\\"average\\"}) - 3 * ts{id=2}",
        "limit": 3333,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "(ts{id=1, aggregate=\\"average\\"} + ts{id=2, aggregate=\\"average\\"} + ts{id=3, aggregate=\\"average\\"}) + (ts{id=1, aggregate=\\"average\\", granularity=\\"1h\\"} + ts{id=2, aggregate=\\"average\\", granularity=\\"1h\\"} + ts{id=3, aggregate=\\"average\\", granularity=\\"1h\\"}) * max(ts{id=1, aggregate=\\"count\\"}, ts{id=2, aggregate=\\"count\\"}, ts{id=3, aggregate=\\"count\\"}) / min(ts{externalId=\\"Timeseries1\\"}) - avg(ts{id=1, aggregate=\\"average\\"}, ts{id=2, aggregate=\\"average\\"}, ts{id=3, aggregate=\\"average\\"}) - 3 * ts{id=3}",
        "limit": 3333,
        "start": 1549336675000,
      },
    ],
  },
  "method": "POST",
  "requestId": "1_15_H",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 29`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "end": 1549338475000,
        "expression": "max(max(ts{id=1}, 5), 5) + max(ts{id=1}, ts{id=2}, ts{id=3})",
        "limit": 33333,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "max(max(ts{id=2}, 5), 5) + max(ts{id=1}, ts{id=2}, ts{id=3})",
        "limit": 33333,
        "start": 1549336675000,
      },
      Object {
        "end": 1549338475000,
        "expression": "max(max(ts{id=3}, 5), 5) + max(ts{id=1}, ts{id=2}, ts{id=3})",
        "limit": 33333,
        "start": 1549336675000,
      },
    ],
  },
  "method": "POST",
  "requestId": "1_15_I",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`Datasource Query Given custom queries with functions should generate the correct filtered queries 30`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "end": 1549338475000,
        "expression": "ts{externalId=\\"Timeseries1\\"}",
        "limit": 100000,
        "start": 1549336675000,
      },
    ],
  },
  "method": "POST",
  "requestId": "1_15_J",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`Datasource Query Given custom queries with functions should return correct datapoints and labels 1`] = `
Object {
  "data": Array [
    Object {
      "datapoints": Array [],
      "target": "Timeseries1 + pi()",
    },
    Object {
      "datapoints": Array [],
      "target": "Timeseries2 + pi()",
    },
    Object {
      "datapoints": Array [],
      "target": "Timeseries3 + pi()",
    },
    Object {
      "datapoints": Array [],
      "target": "Timeseries1 + Timeseries1",
    },
    Object {
      "datapoints": Array [],
      "target": "Timeseries2 + Timeseries1",
    },
    Object {
      "datapoints": Array [],
      "target": "Timeseries3 + Timeseries1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesA value1 * test timeseriesA value1 - test timeseriesA value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesA value1 * test timeseriesA value1 - test timeseriesB value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesA value1 * test timeseriesA value1 - test timeseriesC value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesA value1 * test timeseriesB value1 - test timeseriesA value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesA value1 * test timeseriesB value1 - test timeseriesB value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesA value1 * test timeseriesB value1 - test timeseriesC value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesA value1 * test timeseriesC value1 - test timeseriesA value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesA value1 * test timeseriesC value1 - test timeseriesB value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesA value1 * test timeseriesC value1 - test timeseriesC value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesB value1 * test timeseriesA value1 - test timeseriesA value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesB value1 * test timeseriesA value1 - test timeseriesB value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesB value1 * test timeseriesA value1 - test timeseriesC value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesB value1 * test timeseriesB value1 - test timeseriesA value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesB value1 * test timeseriesB value1 - test timeseriesB value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesB value1 * test timeseriesB value1 - test timeseriesC value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesB value1 * test timeseriesC value1 - test timeseriesA value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesB value1 * test timeseriesC value1 - test timeseriesB value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesB value1 * test timeseriesC value1 - test timeseriesC value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesC value1 * test timeseriesA value1 - test timeseriesA value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesC value1 * test timeseriesA value1 - test timeseriesB value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesC value1 * test timeseriesA value1 - test timeseriesC value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesC value1 * test timeseriesB value1 - test timeseriesA value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesC value1 * test timeseriesB value1 - test timeseriesB value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesC value1 * test timeseriesB value1 - test timeseriesC value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesC value1 * test timeseriesC value1 - test timeseriesA value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesC value1 * test timeseriesC value1 - test timeseriesB value1",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesC value1 * test timeseriesC value1 - test timeseriesC value1",
    },
    Object {
      "datapoints": Array [],
      "target": "Timeseries1 * Timeseries1 - Timeseries1",
    },
    Object {
      "datapoints": Array [],
      "target": "Timeseries2 * Timeseries1 - Timeseries1",
    },
    Object {
      "datapoints": Array [],
      "target": "Timeseries3 * Timeseries1 - Timeseries1",
    },
    Object {
      "datapoints": Array [],
      "target": "(sum + sum + sum)",
    },
    Object {
      "datapoints": Array [],
      "target": "(Timeseries1 + Timeseries2 + Timeseries3) + (Timeseries1 + Timeseries2 + Timeseries3) * max(Timeseries1, Timeseries2, Timeseries3) / min(Timeseries1) - avg(Timeseries1, Timeseries2, Timeseries3) - 3 * Timeseries1",
    },
    Object {
      "datapoints": Array [],
      "target": "(Timeseries1 + Timeseries2 + Timeseries3) + (Timeseries1 + Timeseries2 + Timeseries3) * max(Timeseries1, Timeseries2, Timeseries3) / min(Timeseries1) - avg(Timeseries1, Timeseries2, Timeseries3) - 3 * Timeseries2",
    },
    Object {
      "datapoints": Array [],
      "target": "(Timeseries1 + Timeseries2 + Timeseries3) + (Timeseries1 + Timeseries2 + Timeseries3) * max(Timeseries1, Timeseries2, Timeseries3) / min(Timeseries1) - avg(Timeseries1, Timeseries2, Timeseries3) - 3 * Timeseries3",
    },
    Object {
      "datapoints": Array [],
      "target": "max(max(Timeseries1, 5), 5) + max(Timeseries1, Timeseries2, Timeseries3)",
    },
    Object {
      "datapoints": Array [],
      "target": "max(max(Timeseries2, 5), 5) + max(Timeseries1, Timeseries2, Timeseries3)",
    },
    Object {
      "datapoints": Array [],
      "target": "max(max(Timeseries3, 5), 5) + max(Timeseries1, Timeseries2, Timeseries3)",
    },
    Object {
      "datapoints": Array [],
      "target": "test timeseriesA : Timeseries1",
    },
  ],
}
`;

exports[`Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should generate the correct queries and not requery for asset timeseries 1`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should generate the correct queries and not requery for asset timeseries 2`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetSubtreeIds": Array [
        Object {
          "id": "123",
        },
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should generate the correct queries and not requery for asset timeseries 3`] = `
Object {
  "data": Object {
    "end": 1549338475000,
    "items": Array [
      Object {
        "id": 123,
      },
    ],
    "limit": 100000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_18_A",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should generate the correct queries and not requery for asset timeseries 4`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetSubtreeIds": Array [
        Object {
          "id": "456",
        },
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should generate the correct queries and not requery for asset timeseries 5`] = `
Object {
  "data": Object {
    "end": 1549338475000,
    "items": Array [
      Object {
        "id": 123,
      },
      Object {
        "id": 456,
      },
    ],
    "limit": 50000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_18_A",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should return correct datapoints and labels 1`] = `
Object {
  "data": Array [],
}
`;

exports[`Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should return correct datapoints and labels 2`] = `
Object {
  "data": Array [],
}
`;

exports[`Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should return correct datapoints and labels 3`] = `
Object {
  "data": Array [
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries123",
    },
  ],
}
`;

exports[`Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should return correct datapoints and labels 4`] = `
Object {
  "data": Array [
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries123",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries456",
    },
  ],
}
`;
