// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CogniteDatasource Annotations Query Given an annotation query should generate the correct request 1`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": "[123]",
      "endTime": Object {
        "min": 1549336675000,
      },
      "startTime": Object {
        "max": 1549338475000,
      },
      "type": "type 1",
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/events/list",
}
`;

exports[`CogniteDatasource Annotations Query Given an annotation query should return the correct events 1`] = `
Array [
  Object {
    "annotation": Object {
      "expr": "event{assetIds = [123], type= 'type 1' }",
    },
    "isRegion": true,
    "text": "event 1",
    "time": "1549336675000",
    "timeEnd": "1549336775000",
    "title": "type 1",
  },
  Object {
    "annotation": Object {
      "expr": "event{assetIds = [123], type= 'type 1' }",
    },
    "isRegion": true,
    "text": "time out of bounds",
    "time": "1549336600000",
    "timeEnd": "1549338500000",
    "title": "type 1",
  },
]
`;

exports[`CogniteDatasource Annotations Query Given an annotation query where nothing is returned should generate the correct request 1`] = `
Object {
  "data": Object {
    "filter": Object {
      "endTime": Object {
        "min": 1549336675000,
      },
      "startTime": Object {
        "max": 1549338475000,
      },
      "type": "non-existant type",
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/events/list",
}
`;

exports[`CogniteDatasource Annotations Query Given an annotation query with a metadata request should generate the correct request 1`] = `
Object {
  "data": Object {
    "filter": Object {
      "endTime": Object {
        "min": 1549336675000,
      },
      "metadata": "{\\"key1\\":\\"value1\\",\\"key2\\":\\"value2\\"}",
      "startTime": Object {
        "max": 1549338475000,
      },
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/events/list",
}
`;

exports[`CogniteDatasource Annotations Query Given an annotation query with a metadata request should return the correct event 1`] = `
Array [
  Object {
    "annotation": Object {
      "expr": "event{ metadata={\\"key1\\":\\"value1\\",\\"key2\\":\\"value2\\"} }",
    },
    "isRegion": true,
    "text": "time out of bounds",
    "time": "1549336600000",
    "timeEnd": "1549338500000",
    "title": "type 1",
  },
]
`;

exports[`CogniteDatasource Annotations Query Given an annotation query with filters should generate the correct request 1`] = `
Object {
  "data": Object {
    "filter": Object {
      "endTime": Object {
        "min": 1549336675000,
      },
      "startTime": Object {
        "max": 1549338475000,
      },
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/events/list",
}
`;

exports[`CogniteDatasource Annotations Query Given an annotation query with filters should return the correct events 1`] = `
Array [
  Object {
    "annotation": Object {
      "expr": "event{}",
      "filter": "filter{description=~event.*, type!= 'type 1', }",
    },
    "isRegion": true,
    "text": "event 2",
    "time": "1549336775000",
    "timeEnd": "1549336875000",
    "title": "type 2",
  },
  Object {
    "annotation": Object {
      "expr": "event{}",
      "filter": "filter{description=~event.*, type!= 'type 1', }",
    },
    "isRegion": true,
    "text": "event 3",
    "time": "1549336875000",
    "timeEnd": "1549336975000",
    "title": "type 3",
  },
  Object {
    "annotation": Object {
      "expr": "event{}",
      "filter": "filter{description=~event.*, type!= 'type 1', }",
    },
    "isRegion": true,
    "text": "event 4",
    "time": "1549336975000",
    "timeEnd": "1549337075000",
    "title": "type 4",
  },
]
`;

exports[`CogniteDatasource Annotations Query Given an annotation query with variables should generate the correct request 1`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": "[123]",
      "endTime": Object {
        "min": 1549336675000,
      },
      "startTime": Object {
        "max": 1549338475000,
      },
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/events/list",
}
`;

exports[`CogniteDatasource Annotations Query Given an annotation query with variables should return the correct events 1`] = `Array []`;

exports[`CogniteDatasource Annotations Query Given an annotation query without any filters should return all events 1`] = `
Array [
  Object {
    "annotation": Object {
      "expr": "event{}",
    },
    "isRegion": true,
    "text": "event 1",
    "time": "1549336675000",
    "timeEnd": "1549336775000",
    "title": "type 1",
  },
  Object {
    "annotation": Object {
      "expr": "event{}",
    },
    "isRegion": true,
    "text": "event 2",
    "time": "1549336775000",
    "timeEnd": "1549336875000",
    "title": "type 2",
  },
  Object {
    "annotation": Object {
      "expr": "event{}",
    },
    "isRegion": true,
    "text": "event 3",
    "time": "1549336875000",
    "timeEnd": "1549336975000",
    "title": "type 3",
  },
  Object {
    "annotation": Object {
      "expr": "event{}",
    },
    "isRegion": true,
    "text": "event 4",
    "time": "1549336975000",
    "timeEnd": "1549337075000",
    "title": "type 4",
  },
  Object {
    "annotation": Object {
      "expr": "event{}",
    },
    "isRegion": true,
    "text": "time out of bounds",
    "time": "1549336600000",
    "timeEnd": "1549338500000",
    "title": "type 1",
  },
]
`;

exports[`CogniteDatasource Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 1`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 2`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetSubtreeIds": Array [
        Object {
          "id": "456",
        },
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 3`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "789",
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 4`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 5`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetSubtreeIds": Array [
        Object {
          "id": "000",
        },
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 6`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 7`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 8`] = `
Object {
  "data": Object {
    "end": 1549338475000,
    "items": Array [
      Object {
        "externalId": "Timeseries123",
      },
    ],
    "limit": 100000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_10_A",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`CogniteDatasource Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 9`] = `
Object {
  "data": Object {
    "aggregates": Array [
      "min",
    ],
    "end": 1549338475000,
    "granularity": "20m",
    "items": Array [
      Object {
        "externalId": "Timeseries123",
      },
      Object {
        "externalId": "Timeseries456",
      },
    ],
    "limit": 5000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_10_B",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`CogniteDatasource Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 10`] = `
Object {
  "data": Object {
    "aggregates": Array [
      "max",
    ],
    "end": 1549338475000,
    "granularity": "6m",
    "items": Array [
      Object {
        "externalId": "Timeseries123",
      },
      Object {
        "externalId": "Timeseries456",
      },
      Object {
        "externalId": "Timeseries789",
      },
    ],
    "limit": 3333,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_10_C",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`CogniteDatasource Datasource Query Given "Select Timeseries from Asset" queries should generate the correct queries 11`] = `
Object {
  "data": Object {
    "aggregates": Array [
      "tv",
    ],
    "end": 1549338475000,
    "granularity": "6m",
    "items": Array [
      Object {
        "externalId": "Timeseries123",
      },
    ],
    "limit": 10000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_10_D",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`CogniteDatasource Datasource Query Given "Select Timeseries from Asset" queries should return correct datapoints and labels 1`] = `
Object {
  "data": Array [
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries123",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "min Timeseries123",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "min Timeseries456",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesA-Timeseries123",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesB-Timeseries456",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesC-Timeseries789",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseries",
    },
  ],
}
`;

exports[`CogniteDatasource Datasource Query Given "Select Timeseries" queries should generate the correct queries 1`] = `
Object {
  "data": Object {
    "externalId": "Timeseries789",
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/byids",
}
`;

exports[`CogniteDatasource Datasource Query Given "Select Timeseries" queries should generate the correct queries 2`] = `
Object {
  "data": Object {
    "end": 1549338475000,
    "items": Array [
      Object {
        "externalId": "Timeseries123",
      },
    ],
    "limit": 100000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_5_A",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`CogniteDatasource Datasource Query Given "Select Timeseries" queries should generate the correct queries 3`] = `
Object {
  "data": Object {
    "aggregates": Array [
      "count",
    ],
    "end": 1549338475000,
    "granularity": "20m",
    "items": Array [
      Object {
        "externalId": "Timeseries456",
      },
    ],
    "limit": 10000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_5_B",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`CogniteDatasource Datasource Query Given "Select Timeseries" queries should generate the correct queries 4`] = `
Object {
  "data": Object {
    "aggregates": Array [
      "step",
    ],
    "end": 1549338475000,
    "granularity": "1s",
    "items": Array [
      Object {
        "externalId": "Timeseries789",
      },
    ],
    "limit": 10000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_5_C",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`CogniteDatasource Datasource Query Given "Select Timeseries" queries should return correct datapoints and labels 1`] = `
Object {
  "data": Array [
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries123",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "count Timeseries456",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseries-Timeseries789",
    },
  ],
}
`;

exports[`CogniteDatasource Datasource Query Given "Select Timeseries" queries with errors should generate the correct query 1`] = `
Object {
  "data": Object {
    "end": 1549338475000,
    "items": Array [
      Object {
        "externalId": "Timeseries123",
      },
    ],
    "limit": 100000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_7_A",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`CogniteDatasource Datasource Query Given "Select Timeseries" queries with errors should generate the correct query 2`] = `
Object {
  "data": Object {
    "end": 1549338475000,
    "items": Array [
      Object {
        "externalId": "Timeseries123",
      },
    ],
    "limit": 100000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_7_B",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`CogniteDatasource Datasource Query Given an older queryTarget format should generate the correct query 1`] = `
Object {
  "data": Object {
    "aggregates": Array [
      "average",
    ],
    "end": 1549338475000,
    "granularity": "30s",
    "items": Array [
      Object {
        "externalId": "Timeseries123",
      },
    ],
    "limit": 10000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_3_A",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`CogniteDatasource Datasource Query Given an older queryTarget format should return datapoints and the default label 1`] = `
Object {
  "data": Array [
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "average Timeseries123",
    },
  ],
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries should generate the correct filtered queries 1`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries should generate the correct filtered queries 2`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries should generate the correct filtered queries 3`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries should generate the correct filtered queries 4`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries should generate the correct filtered queries 5`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries should generate the correct filtered queries 6`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries should generate the correct filtered queries 7`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries should generate the correct filtered queries 8`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries should generate the correct filtered queries 9`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries should generate the correct filtered queries 10`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries should generate the correct filtered queries 11`] = `
Object {
  "data": Object {
    "end": 1549338475000,
    "items": Array [
      Object {
        "externalId": "Timeseries1",
      },
      Object {
        "externalId": "Timeseries2",
      },
      Object {
        "externalId": "Timeseries3",
      },
      Object {
        "externalId": "Timeseries4",
      },
      Object {
        "externalId": "Timeseries5",
      },
      Object {
        "externalId": "Test",
      },
    ],
    "limit": 16666,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_14_A",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries should generate the correct filtered queries 12`] = `
Object {
  "data": Object {
    "aggregates": Array [
      "continuousVariance",
    ],
    "end": 1549338475000,
    "granularity": "10d",
    "items": Array [
      Object {
        "externalId": "Timeseries4",
      },
    ],
    "limit": 10000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_14_B",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries should generate the correct filtered queries 13`] = `
Object {
  "data": Object {
    "aggregates": Array [
      "discreteVariance",
    ],
    "end": 1549338475000,
    "granularity": "24h",
    "items": Array [
      Object {
        "externalId": "Timeseries4",
      },
    ],
    "limit": 10000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_14_C",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries should generate the correct filtered queries 14`] = `
Object {
  "data": Object {
    "end": 1549338475000,
    "items": Array [
      Object {
        "externalId": "Timeseries1",
      },
    ],
    "limit": 100000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_14_D",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries should generate the correct filtered queries 15`] = `
Object {
  "data": Object {
    "end": 1549338475000,
    "items": Array [
      Object {
        "externalId": "Timeseries2",
      },
      Object {
        "externalId": "Timeseries3",
      },
      Object {
        "externalId": "Timeseries4",
      },
      Object {
        "externalId": "Timeseries5",
      },
      Object {
        "externalId": "Test",
      },
    ],
    "limit": 20000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_14_E",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries should return correct datapoints and labels 1`] = `
Object {
  "data": Array [
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries1",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries2",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries3",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries4",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries5",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Test",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "continuousVariance Timeseries4",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "discreteVariance Timeseries4",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries1",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesB value1",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesC value1",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesD value1",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesE value2",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesF value1",
    },
  ],
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries with functions should generate the correct filtered queries 1`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries with functions should generate the correct filtered queries 2`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries with functions should generate the correct filtered queries 3`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries with functions should generate the correct filtered queries 4`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries with functions should generate the correct filtered queries 5`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries with functions should generate the correct filtered queries 6`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries with functions should generate the correct filtered queries 7`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries with functions should generate the correct filtered queries 8`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries with functions should generate the correct filtered queries 9`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries with functions should generate the correct filtered queries 10`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 1000,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries with functions should generate the correct filtered queries 11`] = `
Object {
  "data": Object {
    "end": 1549338475000,
    "items": Array [
      Object {
        "externalId": "Timeseries1",
      },
      Object {
        "externalId": "Timeseries2",
      },
      Object {
        "externalId": "Timeseries3",
      },
      Object {
        "externalId": "Timeseries4",
      },
      Object {
        "externalId": "Timeseries5",
      },
      Object {
        "externalId": "Test",
      },
    ],
    "limit": 16666,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_18_A",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries with functions should generate the correct filtered queries 12`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "expression": "TS{id=12} + TS{id=12} + TS{id=123}",
      },
      Object {
        "expression": "TS{id=34} + TS{id=34} + TS{id=123}",
      },
      Object {
        "expression": "TS{id=56} + TS{id=56} + TS{id=123}",
      },
      Object {
        "expression": "TS{id=78} + TS{id=78} + TS{id=123}",
      },
      Object {
        "expression": "TS{id=90} + TS{id=90} + TS{id=123}",
      },
      Object {
        "expression": "TS{id=123} + TS{id=123} + TS{id=123}",
      },
    ],
  },
  "method": "POST",
  "requestId": "1_18_B",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries with functions should generate the correct filtered queries 13`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "expression": "TS{id=12} * TS{id=12,aggregate='average'}- TS{id=12,aggregate='average',granularity='10s'}",
      },
      Object {
        "expression": "TS{id=34} * TS{id=34,aggregate='average'}- TS{id=34,aggregate='average',granularity='10s'}",
      },
      Object {
        "expression": "TS{id=56} * TS{id=56,aggregate='average'}- TS{id=56,aggregate='average',granularity='10s'}",
      },
      Object {
        "expression": "TS{id=78} * TS{id=78,aggregate='average'}- TS{id=78,aggregate='average',granularity='10s'}",
      },
      Object {
        "expression": "TS{id=90} * TS{id=90,aggregate='average'}- TS{id=90,aggregate='average',granularity='10s'}",
      },
      Object {
        "expression": "TS{id=123} * TS{id=123,aggregate='average'}- TS{id=123,aggregate='average',granularity='10s'}",
      },
    ],
  },
  "method": "POST",
  "requestId": "1_18_C",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries with functions should generate the correct filtered queries 14`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "expression": "TS{id=12,aggregate='none'} * TS{id=12,aggregate='average'} - TS{id=12,aggregate='average',granularity='10m'}",
      },
    ],
  },
  "method": "POST",
  "requestId": "1_18_D",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries with functions should generate the correct filtered queries 15`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "expression": "1+1",
      },
    ],
  },
  "method": "POST",
  "requestId": "1_18_E",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries with functions should generate the correct filtered queries 16`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "expression": "(TS{id=12} + TS{id=34} + TS{id=56} + TS{id=78} + TS{id=90} + TS{id=123})",
      },
    ],
  },
  "method": "POST",
  "requestId": "1_18_F",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries with functions should generate the correct filtered queries 17`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "expression": "(TS{id=12,aggregate='average'} + TS{id=34,aggregate='average'} + TS{id=56,aggregate='average'} + TS{id=78,aggregate='average'} + TS{id=90,aggregate='average'} + TS{id=123,aggregate='average'}) + (TS{id=12,aggregate='average',granularity='1h'} + TS{id=34,aggregate='average',granularity='1h'} + TS{id=56,aggregate='average',granularity='1h'} + TS{id=78,aggregate='average',granularity='1h'} + TS{id=90,aggregate='average',granularity='1h'} + TS{id=123,aggregate='average',granularity='1h'}) * max(TS{id=12,aggregate='count'}, TS{id=34,aggregate='count'}, TS{id=56,aggregate='count'}, TS{id=78,aggregate='count'}, TS{id=90,aggregate='count'}, TS{id=123,aggregate='count'})/ - TS{id=12,aggregate='avg'} - 3*TS{id=12}",
      },
      Object {
        "expression": "(TS{id=12,aggregate='average'} + TS{id=34,aggregate='average'} + TS{id=56,aggregate='average'} + TS{id=78,aggregate='average'} + TS{id=90,aggregate='average'} + TS{id=123,aggregate='average'}) + (TS{id=12,aggregate='average',granularity='1h'} + TS{id=34,aggregate='average',granularity='1h'} + TS{id=56,aggregate='average',granularity='1h'} + TS{id=78,aggregate='average',granularity='1h'} + TS{id=90,aggregate='average',granularity='1h'} + TS{id=123,aggregate='average',granularity='1h'}) * max(TS{id=12,aggregate='count'}, TS{id=34,aggregate='count'}, TS{id=56,aggregate='count'}, TS{id=78,aggregate='count'}, TS{id=90,aggregate='count'}, TS{id=123,aggregate='count'})/ - TS{id=12,aggregate='avg'} - 3*TS{id=34}",
      },
      Object {
        "expression": "(TS{id=12,aggregate='average'} + TS{id=34,aggregate='average'} + TS{id=56,aggregate='average'} + TS{id=78,aggregate='average'} + TS{id=90,aggregate='average'} + TS{id=123,aggregate='average'}) + (TS{id=12,aggregate='average',granularity='1h'} + TS{id=34,aggregate='average',granularity='1h'} + TS{id=56,aggregate='average',granularity='1h'} + TS{id=78,aggregate='average',granularity='1h'} + TS{id=90,aggregate='average',granularity='1h'} + TS{id=123,aggregate='average',granularity='1h'}) * max(TS{id=12,aggregate='count'}, TS{id=34,aggregate='count'}, TS{id=56,aggregate='count'}, TS{id=78,aggregate='count'}, TS{id=90,aggregate='count'}, TS{id=123,aggregate='count'})/ - TS{id=12,aggregate='avg'} - 3*TS{id=56}",
      },
      Object {
        "expression": "(TS{id=12,aggregate='average'} + TS{id=34,aggregate='average'} + TS{id=56,aggregate='average'} + TS{id=78,aggregate='average'} + TS{id=90,aggregate='average'} + TS{id=123,aggregate='average'}) + (TS{id=12,aggregate='average',granularity='1h'} + TS{id=34,aggregate='average',granularity='1h'} + TS{id=56,aggregate='average',granularity='1h'} + TS{id=78,aggregate='average',granularity='1h'} + TS{id=90,aggregate='average',granularity='1h'} + TS{id=123,aggregate='average',granularity='1h'}) * max(TS{id=12,aggregate='count'}, TS{id=34,aggregate='count'}, TS{id=56,aggregate='count'}, TS{id=78,aggregate='count'}, TS{id=90,aggregate='count'}, TS{id=123,aggregate='count'})/ - TS{id=12,aggregate='avg'} - 3*TS{id=78}",
      },
      Object {
        "expression": "(TS{id=12,aggregate='average'} + TS{id=34,aggregate='average'} + TS{id=56,aggregate='average'} + TS{id=78,aggregate='average'} + TS{id=90,aggregate='average'} + TS{id=123,aggregate='average'}) + (TS{id=12,aggregate='average',granularity='1h'} + TS{id=34,aggregate='average',granularity='1h'} + TS{id=56,aggregate='average',granularity='1h'} + TS{id=78,aggregate='average',granularity='1h'} + TS{id=90,aggregate='average',granularity='1h'} + TS{id=123,aggregate='average',granularity='1h'}) * max(TS{id=12,aggregate='count'}, TS{id=34,aggregate='count'}, TS{id=56,aggregate='count'}, TS{id=78,aggregate='count'}, TS{id=90,aggregate='count'}, TS{id=123,aggregate='count'})/ - TS{id=12,aggregate='avg'} - 3*TS{id=90}",
      },
      Object {
        "expression": "(TS{id=12,aggregate='average'} + TS{id=34,aggregate='average'} + TS{id=56,aggregate='average'} + TS{id=78,aggregate='average'} + TS{id=90,aggregate='average'} + TS{id=123,aggregate='average'}) + (TS{id=12,aggregate='average',granularity='1h'} + TS{id=34,aggregate='average',granularity='1h'} + TS{id=56,aggregate='average',granularity='1h'} + TS{id=78,aggregate='average',granularity='1h'} + TS{id=90,aggregate='average',granularity='1h'} + TS{id=123,aggregate='average',granularity='1h'}) * max(TS{id=12,aggregate='count'}, TS{id=34,aggregate='count'}, TS{id=56,aggregate='count'}, TS{id=78,aggregate='count'}, TS{id=90,aggregate='count'}, TS{id=123,aggregate='count'})/ - TS{id=12,aggregate='avg'} - 3*TS{id=123}",
      },
    ],
  },
  "method": "POST",
  "requestId": "1_18_G",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries with functions should generate the correct filtered queries 18`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "expression": "max(max(TS{id=12},5),5) + max(TS{id=12}, TS{id=34}, TS{id=56}, TS{id=78}, TS{id=90}, TS{id=123})",
      },
      Object {
        "expression": "max(max(TS{id=34},5),5) + max(TS{id=12}, TS{id=34}, TS{id=56}, TS{id=78}, TS{id=90}, TS{id=123})",
      },
      Object {
        "expression": "max(max(TS{id=56},5),5) + max(TS{id=12}, TS{id=34}, TS{id=56}, TS{id=78}, TS{id=90}, TS{id=123})",
      },
      Object {
        "expression": "max(max(TS{id=78},5),5) + max(TS{id=12}, TS{id=34}, TS{id=56}, TS{id=78}, TS{id=90}, TS{id=123})",
      },
      Object {
        "expression": "max(max(TS{id=90},5),5) + max(TS{id=12}, TS{id=34}, TS{id=56}, TS{id=78}, TS{id=90}, TS{id=123})",
      },
      Object {
        "expression": "max(max(TS{id=123},5),5) + max(TS{id=12}, TS{id=34}, TS{id=56}, TS{id=78}, TS{id=90}, TS{id=123})",
      },
    ],
  },
  "method": "POST",
  "requestId": "1_18_H",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries with functions should generate the correct filtered queries 19`] = `
Object {
  "data": Object {
    "items": Array [
      Object {
        "expression": "TS{id=12} + [[TimeseriesVariable]]",
      },
    ],
  },
  "method": "POST",
  "requestId": "1_18_I",
  "url": "/api/datasources/proxy/6/playground/TestProject/timeseries/synthetic/query",
}
`;

exports[`CogniteDatasource Datasource Query Given custom queries with functions should return correct datapoints and labels 1`] = `
Object {
  "data": Array [
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries1",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries2",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries3",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries4",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries5",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Test",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries1",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries2",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries3",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries4",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries5",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Test",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesA value1",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesB value1",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesC value1",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesD value1",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesE value2",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesF value1",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries1",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "SUM",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries1",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries2",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries3",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries4",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries5",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Test",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries1",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries2",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries3",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries4",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries5",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Test",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "test timeseriesA : Timeseries1",
    },
  ],
}
`;

exports[`CogniteDatasource Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should generate the correct queries and not requery for asset timeseries 1`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetIds": Array [
        "123",
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should generate the correct queries and not requery for asset timeseries 2`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetSubtreeIds": Array [
        Object {
          "id": "123",
        },
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should generate the correct queries and not requery for asset timeseries 3`] = `
Object {
  "data": Object {
    "end": 1549338475000,
    "items": Array [
      Object {
        "externalId": "Timeseries123",
      },
    ],
    "limit": 100000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_22_A",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`CogniteDatasource Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should generate the correct queries and not requery for asset timeseries 4`] = `
Object {
  "data": Object {
    "filter": Object {
      "assetSubtreeIds": Array [
        Object {
          "id": "456",
        },
      ],
    },
    "limit": 101,
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/list",
}
`;

exports[`CogniteDatasource Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should generate the correct queries and not requery for asset timeseries 5`] = `
Object {
  "data": Object {
    "end": 1549338475000,
    "items": Array [
      Object {
        "externalId": "Timeseries123",
      },
      Object {
        "externalId": "Timeseries456",
      },
    ],
    "limit": 50000,
    "start": 1549336675000,
  },
  "method": "POST",
  "requestId": "1_22_A",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/data/list",
}
`;

exports[`CogniteDatasource Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should return correct datapoints and labels 1`] = `
Object {
  "data": Array [],
}
`;

exports[`CogniteDatasource Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should return correct datapoints and labels 2`] = `
Object {
  "data": Array [],
}
`;

exports[`CogniteDatasource Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should return correct datapoints and labels 3`] = `
Object {
  "data": Array [
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries123",
    },
  ],
}
`;

exports[`CogniteDatasource Datasource Query Given multiple "Select Timeseries from Asset" queries in a row should return correct datapoints and labels 4`] = `
Object {
  "data": Array [
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries123",
    },
    Object {
      "datapoints": Array [
        Array [
          0,
          1549336675000,
        ],
        Array [
          1,
          1549337275000,
        ],
        Array [
          2,
          1549337875000,
        ],
        Array [
          3,
          1549338475000,
        ],
      ],
      "target": "Timeseries456",
    },
  ],
}
`;

exports[`CogniteDatasource Dropdown Options Query Given a request for asset options should generate the correct request 1`] = `
Object {
  "data": Object {
    "search": Object {
      "query": "asset",
    },
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/assets/search",
}
`;

exports[`CogniteDatasource Dropdown Options Query Given a request for asset options should return the assets with asset in their name 1`] = `
Array [
  Object {
    "text": "asset 1 (test asset 1)",
    "value": "123",
  },
  Object {
    "text": "asset 2 (test asset 2)",
    "value": "456",
  },
  Object {
    "text": "asset 3 (test asset 3)",
    "value": "789",
  },
]
`;

exports[`CogniteDatasource Dropdown Options Query Given a request for asset options with additional options should generate the correct request 1`] = `
Object {
  "data": Object {
    "search": Object {
      "query": "asset",
    },
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/assets/search?metadata=%7B%22key1%22%3A%22value1%22%7D",
}
`;

exports[`CogniteDatasource Dropdown Options Query Given a request for asset options with additional options should return the assets with asset in their name and metadata.key1 = value1 1`] = `
Array [
  Object {
    "text": "asset 1 (test asset 1)",
    "value": "123",
  },
]
`;

exports[`CogniteDatasource Dropdown Options Query Given a request for timeseries options should generate the correct request 1`] = `
Object {
  "data": Object {
    "search": Object {
      "query": "Timeseries",
    },
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/search",
}
`;

exports[`CogniteDatasource Dropdown Options Query Given a request for timeseries options should return timeseries with Timeseries in their name 1`] = `
Array [
  Object {
    "text": "Timeseries1 (testA)",
    "value": "Timeseries1",
  },
  Object {
    "text": "Timeseries2 (testB)",
    "value": "Timeseries2",
  },
  Object {
    "text": "Timeseries3 (testC)",
    "value": "Timeseries3",
  },
  Object {
    "text": "Timeseries4 (testD)",
    "value": "Timeseries4",
  },
  Object {
    "text": "Timeseries5 (testE)",
    "value": "Timeseries5",
  },
]
`;

exports[`CogniteDatasource Dropdown Options Query Given an empty request for asset options should generate the correct request 1`] = `
Object {
  "data": Object {},
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/assets/search",
}
`;

exports[`CogniteDatasource Dropdown Options Query Given an empty request for asset options should return all assets 1`] = `
Array [
  Object {
    "text": "asset 1 (test asset 1)",
    "value": "123",
  },
  Object {
    "text": "asset 2 (test asset 2)",
    "value": "456",
  },
  Object {
    "text": "asset 3 (test asset 3)",
    "value": "789",
  },
  Object {
    "text": "foo (bar)",
    "value": "999",
  },
]
`;

exports[`CogniteDatasource Dropdown Options Query Given an empty request for timeseries options should generate the correct request 1`] = `
Object {
  "data": Object {},
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/timeseries/search",
}
`;

exports[`CogniteDatasource Dropdown Options Query Given an empty request for timeseries options should return all timeseries 1`] = `
Array [
  Object {
    "text": "Timeseries1 (testA)",
    "value": "Timeseries1",
  },
  Object {
    "text": "Timeseries2 (testB)",
    "value": "Timeseries2",
  },
  Object {
    "text": "Timeseries3 (testC)",
    "value": "Timeseries3",
  },
  Object {
    "text": "Timeseries4 (testD)",
    "value": "Timeseries4",
  },
  Object {
    "text": "Timeseries5 (testE)",
    "value": "Timeseries5",
  },
  Object {
    "text": "Test",
    "value": "Test",
  },
]
`;

exports[`CogniteDatasource Login When given invalid login info should display an error message 1`] = `
Object {
  "method": "GET",
  "url": "/api/datasources/proxy/6/cogniteloginstatus",
}
`;

exports[`CogniteDatasource Login When given invalid login info should display an error message 2`] = `
Object {
  "message": "Your Cognite credentials are invalid",
  "status": "error",
  "title": "Error",
}
`;

exports[`CogniteDatasource Login When given valid login info and correct project should log the user in 1`] = `
Object {
  "method": "GET",
  "url": "/api/datasources/proxy/6/cogniteloginstatus",
}
`;

exports[`CogniteDatasource Login When given valid login info and correct project should log the user in 2`] = `
Object {
  "message": "Your Cognite credentials are valid",
  "status": "success",
  "title": "Success",
}
`;

exports[`CogniteDatasource Login When given valid login info but incorrect project should display an error message 1`] = `
Object {
  "method": "GET",
  "url": "/api/datasources/proxy/6/cogniteloginstatus",
}
`;

exports[`CogniteDatasource Login When given valid login info but incorrect project should display an error message 2`] = `
Object {
  "message": "Your Cognite credentials are invalid",
  "status": "error",
  "title": "Error",
}
`;

exports[`CogniteDatasource Metrics Query Given a metrics query with filters should generate the correct request 1`] = `
Object {
  "data": Object {
    "limit": 1000,
    "search": Object {},
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/assets/search",
}
`;

exports[`CogniteDatasource Metrics Query Given a metrics query with filters should return the correct assets 1`] = `
Array [
  Object {
    "text": "asset 1",
    "value": 123,
  },
  Object {
    "text": "asset 3",
    "value": 789,
  },
]
`;

exports[`CogniteDatasource Metrics Query Given a metrics query with no options should generate the correct request 1`] = `
Object {
  "data": Object {
    "limit": 1000,
    "search": Object {},
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/assets/search",
}
`;

exports[`CogniteDatasource Metrics Query Given a metrics query with no options should return all assets 1`] = `
Array [
  Object {
    "text": "asset 1",
    "value": 123,
  },
  Object {
    "text": "asset 2",
    "value": 456,
  },
  Object {
    "text": "asset 3",
    "value": 789,
  },
  Object {
    "text": "foo",
    "value": 999,
  },
]
`;

exports[`CogniteDatasource Metrics Query Given a simple metrics query should generate the correct request 1`] = `
Object {
  "data": Object {
    "limit": 1000,
    "search": Object {
      "name": "asset",
    },
  },
  "method": "POST",
  "url": "/api/datasources/proxy/6/cogniteapi/TestProject/assets/search",
}
`;

exports[`CogniteDatasource Metrics Query Given a simple metrics query should return the correct assets 1`] = `
Array [
  Object {
    "text": "asset 1",
    "value": 123,
  },
  Object {
    "text": "asset 2",
    "value": 456,
  },
  Object {
    "text": "asset 3",
    "value": 789,
  },
]
`;

exports[`CogniteDatasource Metrics Query Given an empty metrics query should return a parse error 1`] = `
Array [
  Object {
    "text": "ERROR: Unable to parse expression ",
    "value": "-",
  },
]
`;

exports[`CogniteDatasource Metrics Query Given an incomplete metrics query should return an error 1`] = `
Array [
  Object {
    "text": "ERROR: Unable to parse expression asset{",
    "value": "-",
  },
]
`;

exports[`CogniteDatasource Metrics Query Given an incorrect filter query should return an error 1`] = `
Array [
  Object {
    "text": "ERROR: Unable to parse expression filter{",
    "value": "-",
  },
]
`;

exports[`CogniteDatasource Metrics Query Given an incorrect filter query should return an error 2`] = `
Array [
  Object {
    "text": "ERROR: Could not parse: 'foo'. Missing a comparator (=,!=,=~,!~).",
    "value": "-",
  },
]
`;

exports[`CogniteDatasource Metrics Query Given an incorrect metrics query should return an error 1`] = `
Array [
  Object {
    "text": "ERROR: Unable to parse 'name=~asset.*'. Only strict equality (=) is allowed.",
    "value": "-",
  },
]
`;

exports[`CogniteDatasource Metrics Query Given an incorrect metrics query should return an error 2`] = `
Array [
  Object {
    "text": "ERROR: Could not find closing ' \\" ' while parsing 'name=\\"asset'.",
    "value": "-",
  },
]
`;
